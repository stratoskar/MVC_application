// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhereIsMyGrade.Data;

#nullable disable

namespace WhereIsMyGrade.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230111142529_Grades")]
    partial class Grades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WhereIsMyGrade.Models.course", b =>
                {
                    b.Property<int>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCourse"), 1L, 1);

                    b.Property<string>("CourseSemester")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PROFESSORS_AFM")
                        .HasColumnType("int");

                    b.HasKey("IdCourse");

                    b.HasIndex("PROFESSORS_AFM");

                    b.ToTable("course");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.course_has_students", b =>
                {
                    b.Property<int>("COURSE_idCOURSE")
                        .HasColumnType("int");

                    b.Property<int>("STUDENTS_RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<int>("GradeCourseStudent")
                        .HasColumnType("int");

                    b.HasKey("COURSE_idCOURSE", "STUDENTS_RegistrationNumber");

                    b.HasIndex("STUDENTS_RegistrationNumber");

                    b.ToTable("course_has_students");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.professors", b =>
                {
                    b.Property<int>("AFM")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("USERS_username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("AFM");

                    b.HasIndex("USERS_username");

                    b.ToTable("professors");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.secretaries", b =>
                {
                    b.Property<int>("Phonenumber")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("USERS_username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Phonenumber");

                    b.HasIndex("USERS_username");

                    b.ToTable("secretaries");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.students", b =>
                {
                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("USERS_username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("RegistrationNumber");

                    b.HasIndex("USERS_username");

                    b.ToTable("students");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.users", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Username");

                    b.ToTable("user");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.course", b =>
                {
                    b.HasOne("WhereIsMyGrade.Models.professors", "professors")
                        .WithMany()
                        .HasForeignKey("PROFESSORS_AFM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("professors");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.course_has_students", b =>
                {
                    b.HasOne("WhereIsMyGrade.Models.course", "course")
                        .WithMany()
                        .HasForeignKey("COURSE_idCOURSE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhereIsMyGrade.Models.students", "students")
                        .WithMany()
                        .HasForeignKey("STUDENTS_RegistrationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("students");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.professors", b =>
                {
                    b.HasOne("WhereIsMyGrade.Models.users", "users")
                        .WithMany()
                        .HasForeignKey("USERS_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.secretaries", b =>
                {
                    b.HasOne("WhereIsMyGrade.Models.users", "users")
                        .WithMany()
                        .HasForeignKey("USERS_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("WhereIsMyGrade.Models.students", b =>
                {
                    b.HasOne("WhereIsMyGrade.Models.users", "users")
                        .WithMany()
                        .HasForeignKey("USERS_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
